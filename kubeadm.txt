Refer to Udemy Section 11 of the lab:


Install Kubeadm
Reference: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
1. Letting iptables see bridge traffic
> lsmod | grep br_netfilter	(see if module loaded) 
> sudo modprobe br_netfilter 	(if not load itFollow the steps in the official documentation.


set net.bridge.bridge-nf-call-iptables to 1:
> cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
> br_netfilter
> EOF

> cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
> net.bridge.bridge-nf-call-ip6tables = 1
> net.bridge.bridge-nf-call-iptables = 1
> EOF
> sudo sysctl --system


The docker runtime has already been installed on both nodes, so you may skip this step.
Install kubeadm, kubectl and kubelet on all nodes:


Install the following command in one machine (those command lines can be copied from the official website)
> sudo apt-get update
> sudo apt-get install -y apt-transport-https ca-certificates curl
> sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
> echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
> sudo apt-get update
> sudo apt-get install -y kubelet=1.21.0-00 kubeadm=1.21.0-00 kubectl=1.21.0-00
> sudo apt-mark hold kubelet kubeadm kubectl)

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Install the above 7 command lines in one machine
Then install the above 7 command lines in the other machine
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
After install and check if it works by
> kubeadm version -o short
> kubelet --version



After the above installation steps (that's install the kubeadm in 2 nodes), we need to bootstrap a k8s cluster using kubeadm
In the master node, run
> kubeadm init --apiserver-cert-extra-sans=controlplane --apiserver-advertise-address 10.2.223.3 --pod-network-cidr=10.244.0.0/16
> mkdir -p $HOME/.kube
> sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
> sudo chown $(id -u):$(id -g) $HOME/.kube/config
>

